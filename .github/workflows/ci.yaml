name: Go CI

on:
  push

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    permissions: write-all

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PORT: 5432
          POSTGRES_DB: library
          POSTGRES_USER: go_student
          POSTGRES_PASSWORD: 1234567
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure branch is up-to-date with main
        run: |
          git fetch origin main
          if git merge-base --is-ancestor origin/main @; then
            echo 'Tests are already up-to-date'
          else
            echo 'Your tests have not been updated, try to rebase main' && exit 1
          fi
      - name: Check for YAML and Test changes
        run: |
          CHANGES=$(git diff --minimal --name-only origin/main...@ | grep -E '(pull_request_template\.md|\.golangci\.yaml|library\.yaml|integration_test\.go)$' | wc -l)
          if [ "$CHANGES" -ne 0 ]; then
            echo "Changes detected in YAML or Test files: $CHANGES files changed."
            exit 1
          else
            echo "No changes in YAML or Test Go files."
          fi
      - name: Check if third-party protos was not uploaded to repo
        run: |
          proto=$(find . -type f -iname "*.proto" | wc -l | tr -d '[:space:]')
          if [[ $proto -ne 1 ]]; then
            echo "Only one proto file expected (library.proto)."
            echo "Download necessary dependencies via \"generate\" label in makefile."
            exit 1
          fi
      - name: Check if generated code was not uploaded to repo
        run: |
          proto=$(shell find . -type f \( -iname "*.pb.go" -o -iname "*.pb.gw.go" -o -iname "*.pb.validate.go" -o -iname "*.grpc.pb.go" \) ! -path "./integration-test/*" | wc -l | tr -d '[:space:]')
          if [[ $proto -ne 0 ]]; then
            echo "Generated files should not be uploaded to repo."
            echo "Instead, define \"generate\" label in makefile."
            exit 1
          fi
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: ./go.sum
      - name: Generate code
        run: |
          make generate
          make build
      - name: Dependencies
        working-directory: ./
        run: go mod tidy
      - uses: gwatts/go-coverage-action@v2
        id: coverage
        with:
          coverage-threshold: 75
          #          fail-coverage: always
          cover-pkg: ./...
          ignore-pattern: |
            \.pb\.go$
            \.pb\.gw\.go$
            \.pb\.validate\.go$
            .json$
            _mock\.go$
            _minimock\.go$
      - name: Run integration tests
        run: |
          export POSTGRES_HOST=127.0.0.1
          export POSTGRES_PORT=5432
          export POSTGRES_DB=library
          export POSTGRES_USER=go_student
          export POSTGRES_PASSWORD=1234567
          go test -v -race -timeout 15m -tags='integration_test' ./...
      - name: Run unit tests
        run: go test -v -race -timeout 10m  ./...
