name: Go CI

on:
  push

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure branch is up-to-date with main
        run: |
          git fetch origin main
          if git merge-base --is-ancestor origin/main @; then
            echo 'Tests are already up-to-date'
          else
            echo 'Your tests have not been updated, try to rebase main' && exit 1
          fi
      - name: Check for YAML and Test changes
        run: |
          CHANGES=$(git diff --minimal --name-only origin/main...@ | grep -E '(pull_request_template\.md|\.golangci\.yaml|library\.yaml|integration_test\.go)$' | wc -l)
          if [ "$CHANGES" -ne 0 ]; then
            echo "Changes detected in YAML or Test files: $CHANGES files changed."
            exit 1
          else
            echo "No changes in YAML or Test Go files."
          fi
      - name: Check description
        run: |
          shopt -s extglob
          hours=$(echo "${{ github.event.pull_request.body }}" | sed -n 3p | tr -d '[:space:]')
          if [[ "$hours" == +([[:digit:]]) ]]; then
            echo "Hours: $hours"
          else
            echo "Please include the number of hours spent in the pull request description."
            echo "Ensure the third line of the PR description contains exactly one numerical value."
            echo "After correcting the issue, please push your changes to the branch."
            exit 1
          fi
      - name: Check if third-party protos was not uploaded to repo
        run: |
          proto=$(find . -type f -iname "*.proto" | wc -l | tr -d '[:space:]')
          if [[ $proto -ne 1 ]]; then
            echo "Only one proto file expected (library.proto)."
            echo "Download necessary dependencies via \"generate\" label in makefile."
            exit 1
          fi
      - name: Check if generated code was not uploaded to repo
        run: |
          proto=$(shell find . -type f \( -iname "*.pb.go" -o -iname "*.pb.gw.go" -o -iname "*.pb.validate.go" -o -iname "*.grpc.pb.go" \) ! -path "./integration-test/*" | wc -l | tr -d '[:space:]')
          if [[ $proto -ne 0 ]]; then
            echo "Generated files should not be uploaded to repo."
            echo "Instead, define \"generate\" label in makefile."
            exit 1
          fi
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: ./go.sum
      - name: Generate code
        run: |
          make generate
          make build
      - name: Dependencies
        working-directory: ./
        run: go mod tidy
      - name: Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62.2
      - uses: gwatts/go-coverage-action@v2
        id: coverage
        with:
          coverage-threshold: 70
          fail-coverage: always
          cover-pkg: ./...
          ignore-pattern: |
            \.pb\.go$
            .json$
            _mock\.go$
            _minimock\.go$
      - name: Run tests
        run: |
          go test -v -race -timeout 5m -tags='integration_test' ./...
